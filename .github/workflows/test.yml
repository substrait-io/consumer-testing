name: Test
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  consumers:
    name: Run consumer tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        consumer: [datafusion, duckdb]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install Python dependencies
      run: pip install -r requirements.txt

    - name: Run tests for ${{ matrix.consumer }} consumer
      run: pytest -v -m consume_substrait_snapshot --consumer=${{ matrix.consumer }} substrait_consumer/

  producers:
    name: Run producer tests
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        producer: [datafusion, duckdb, ibis, isthmus]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install Python dependencies
      run: pip install -r requirements.txt

    - name: Install Java
      uses: actions/setup-java@v4
      if: ${{ matrix.producer == 'isthmus' }}
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Gradle
      if: ${{ matrix.producer == 'isthmus' }}
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: 8.8

    - name: Build Isthmus
      if: ${{ matrix.producer == 'isthmus' }}
      working-directory: ./substrait-java/isthmus
      run: ../gradlew shadowJar

    - name: Copy Isthmus JARs
      if: ${{ matrix.producer == 'isthmus' }}
      run: |-
        mkdir ./jars
        cp substrait-java/isthmus/build/libs/*all.jar ./jars

    - name: Run tests for ${{ matrix.producer }} producer
      run: pytest -v -m produce_substrait_snapshot --producer=${{ matrix.producer }} substrait_consumer/

    - name: Run Ibis expression tests
      if: ${{ matrix.producer == 'ibis' }}
      run: pytest substrait_consumer/functional/queries/ibis_expressions/
